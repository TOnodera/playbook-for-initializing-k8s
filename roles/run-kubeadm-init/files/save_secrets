#!/usr/bin/python3

"""
kubeadm init 実行時の出力を標準入力として受け取り、トークンとハッシュを取得する。
コントロールコンポーネント、ワーカーコンポーネントをjoinする際に利用できるように
トークン、ハッシュをyamlファイルとして保存しておく。

shellスクリプトで書こうと思ったけど、正規表現がちもいからやめた。
"""

import re
import sys
import yaml


secrets = {"token": None, "cert_hash": None}

# 標準入力からデータを抜き取る
token_pattern = r'--token\s([^\s]+)\s'
cert_hash_pattern = r'\s--discovery-token-ca-cert-hash\s([^\s]+)\s'

for line in sys.stdin:
    token_matcher = re.search(token_pattern, line)
    if token_matcher is not None:
        secrets['token'] = token_matcher.group(1)
    cert_hash_matcher = re.search(cert_hash_pattern, line)
    if cert_hash_matcher is not None:
        secrets['cert_hash'] = cert_hash_matcher.group(1)

if secrets.get("token") is None:
    print("トークンを取得できませんでした", file=sys.stderr)
    exit(1)

if secrets.get("cert_hash") is None:
    print("ハッシュを取得できませんでした", file=sys.stderr)
    exit(1)

# yamlに保存
with open('/tmp/secrets.yaml', 'w') as fp:
    yaml.dump({"secrets": secrets}, fp,
              default_flow_style=False, allow_unicode=True)

exit(0)
